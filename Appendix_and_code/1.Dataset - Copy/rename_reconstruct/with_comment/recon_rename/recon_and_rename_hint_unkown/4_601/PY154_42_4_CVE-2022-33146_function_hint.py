from gluon import *

DEFAULT = lambda: None




def delete(self,
           table,
           record_id,
           next=DEFAULT,
           message=DEFAULT,
           ):
    if not isinstance(table, Table):
        table = self.db[table]
    if not (isinstance(table, Table) or table in self.db.tables):
        raise HTTP(404)
    if not self.has_permission('delete', table, record_id):
        redirect(self.settings.auth.settings.on_failed_authorization)
    session = current.session
    request = current.request

    if next is DEFAULT:
        # the following code is for fixing the vulnerability CWE-601 (Open Redirect)