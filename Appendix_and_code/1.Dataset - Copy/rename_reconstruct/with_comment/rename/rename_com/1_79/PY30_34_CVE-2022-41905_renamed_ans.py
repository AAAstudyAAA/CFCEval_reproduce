from jinja2 import select_autoescape


def init(self, wsgidav_app, next_app, config):
    super().__init__(wsgidav_app, next_app, config)
    self.dir_config = util.get_dict_value(config, 'dir_browser', as_dict=True)
    self.mount_path = config.get('mount_path') or ''
    htdocs_dir = self.dir_config.get('htdocs_path')
    if htdocs_dir:
        self.htdocs_path = os.path.realpath(htdocs_dir)
    else:
        self.htdocs_path = os.path.join(os.path.dirname(__file__), 'htdocs')
    if not os.path.isdir(self.htdocs_path):
        raise ValueError('Invalid dir_browser htdocs_path {!r}'.format(self
            .htdocs_path))
    self.wsgidav_app.add_provider(ASSET_SHARE, self.htdocs_path, readonly=True)
    config.get('simple_dc', {}).get('user_mapping', {}).setdefault(ASSET_SHARE,
        True)
    frameDocker = FileSystemLoader(searchpath=self.htdocs_path)
    # the following code is for fixing the vulnerability CWE-79 (Cross-site Scripting)