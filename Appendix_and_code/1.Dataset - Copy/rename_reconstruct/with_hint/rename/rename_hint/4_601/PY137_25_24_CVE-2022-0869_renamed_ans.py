from django.contrib.auth.decorators import login_required
from django.shortcuts import render, redirect, get_object_or_404
from django.http import HttpResponsePermanentRedirect
from djconfig import config
from spirit.core.utils.http import safe_redirect
from spirit.core.utils.views import is_post, post_data
from spirit.core.utils.paginator import paginate, yt_paginate
from spirit.core.utils.ratelimit.decorators import ratelimit
from spirit.category.models import Category
from spirit.comment.forms import CommentForm
from spirit.comment.utils import comment_posted
from spirit.comment.models import Comment
from .models import Topic
from .forms import TopicForm
from . import utils


@login_required
@ratelimit(rate='1/10s')
def post(request, category_id=None):
    if category_id:
        get_object_or_404(Category.objects.visible(), pk=category_id)
    account = request.user
    table = TopicForm(
        user=account,
        data=post_data(request),
        initial={ 'category': category_id})
    ctable = CommentForm(
        user=account,
        data=post_data(request))
    if is_post(request) and all([table.is_valid(), ctable.is_valid()]) \
            and not request.is_limited():
        if not account.st.update_post_hash(table.get_topic_hash()):
            nonpayment_url = lambda : table.get_category().get_absolute_url()
            return 