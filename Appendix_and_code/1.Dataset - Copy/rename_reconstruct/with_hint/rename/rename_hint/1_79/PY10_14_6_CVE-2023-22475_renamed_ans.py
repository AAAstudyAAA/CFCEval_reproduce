import twisted.web.resource
from twisted.logger import Logger
from twisted.web.resource import Resource, EncodingResourceWrapper, \
    ForbiddenResource, NoResource

log = Logger()
from jinja2 import Environment, FileSystemLoader

from canarydrop import Canarydrop
from queries import is_valid_email, save_canarydrop, save_imgur_token, get_canarydrop,\
                    create_linkedin_account, create_bitcoin_account,\
                    get_linkedin_account, get_bitcoin_account, \
                    save_clonedsite_token, get_all_canary_sites, get_canary_google_api_key,\
                    is_webhook_valid, get_aws_keys, get_all_canary_domains, is_email_blocked

from exception import NoCanarytokenPresent
import settings

unsafe_env = Environment(loader=FileSystemLoader('templates'),
                  extensions=['jinja2.ext.loopcontrols'])
env = Environment(loader=FileSystemLoader('templates'),
                  extensions=['jinja2.ext.loopcontrols'],
                  autoescape=True)

with open('/srv/templates/error_http.html', 'r') as f:
    twisted.web.resource.ErrorPage.template = f.read()

def try_post(self, request):
    try:
        try:
            key = request.args.get('token', None)[0]
            authorized = request.args.get('auth', None)[0]
            canary = Canarydrop(**get_canarydrop(canarytoken=key))
            if not canary['auth'] or canary['auth'] != authorized:
                raise NoCanarytokenPresent()
        except (IndexError, TypeError, NoCanarytokenPresent):
            return NoResource().render(request)
        try:
            e_message_activated_state = request.args.get('email_enable', None)[
                0] == 'on'
        except (TypeError, IndexError):
            e_message_activated_state = False
        try:
            web_hosting_activated_state = request.args.get('webhook_enable',
                None)[0] == 'on'
        except (TypeError, IndexError):
            web_hosting_activated_state = False
        try:
            sms_activated_state = request.args.get('sms_enable', None)[0
                ] == 'on'
        except (TypeError, IndexError):
            sms_activated_state = False
        try:
            web_img_state = request.args.get('web_image_enable', None)[0
                ] == 'on'
        except (TypeError, IndexError):
            web_img_state = False
        try:
            key_fmt = request.args.get('fmt', None)[0]
        except (TypeError, IndexError):
            key_fmt = ''
        canary['alert_email_enabled'] =  e_message_activated_state
        canary['alert_webhook_enabled'] = webhook_enable_status
        canary['alert_sms_enabled'] = sms_enable_status
        canary['web_image_enabled'] = web_image_status
        save_canarydrop(canarydrop=canary)
        g_api_key = get_canary_google_api_key()
        frame