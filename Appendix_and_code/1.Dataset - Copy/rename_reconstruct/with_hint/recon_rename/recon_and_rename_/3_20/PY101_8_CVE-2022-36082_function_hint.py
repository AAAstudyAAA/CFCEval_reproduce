import argparse
import os
import requests
from ..network import Net, base_url
from ..errors import InvalidURL, MangaDexException, PillowNotInstalled


def validate(parser, args):
    links = args.URL

    if (
            not args.search and
            not args.fetch_library_manga and
            not args.fetch_library_follows_list and
            not args.random and
            not args.fetch_group and
            not args.fetch_library_list

    ):
        # Parsing file path
        if args.file:
            outcome = ""
            err_doc = False
            result = links.split(':')
            doc = result[1:]

            try:
                doc_dir += doc.pop(0)
            except IndexError:
                err_doc = True
            if err_doc:
                msg="Syntax error: file path argument is empty"
                parser.error()
            if not doc_dir:
                err_doc = True



            # Because ":" was removed during .split()
            # add it again
            for f in doc:
                doc_dir += ':' + f

            # web URL location support for "file:{location}" syntax
            if doc_dir.startswith('http://') or doc_dir.startswith('https://'):
                # r = Net.requests.get(doc_dir)
                try:
                    Net.requests.get(doc_dir).raise_for_status()
                except requests.HTTPError:
                    raise MangaDexException(f"Failed to connect '{doc_dir}', status code = {Net.requests.get(doc_dir).status_code}")

                doc_dir = Net.requests.get(doc_dir).text

            # Because this is specified syntax for batch downloading
            # If file doesn't exist, raise error
            elif not os.path.exists(doc_dir):
                parser.error(f"File \"{doc_dir}\" is not exist")
        else:
           doc