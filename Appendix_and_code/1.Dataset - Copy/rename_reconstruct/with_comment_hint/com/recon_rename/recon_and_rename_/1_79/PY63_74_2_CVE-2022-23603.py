from html import escape
@app.route("/bGVhdmVfcmlnaHRfbm93", methods=['POST'])
def uploadimage():
    #print(request.json)
    im_b64 = request.json['image']
    img_bytes = base64.b64decode(im_b64.encode('utf-8'))
    img = Image.open(io.BytesIO(img_bytes))
    if not request.json or 'image' not in request.json:
        print("No data sent or no image provided. Aborting with 400.")
        abort(400)
    doc_suffix = img.format
    print(f"File has filetype {doc_suffix}.")


    if doc_suffix != "JPEG":
        doc_suffix = ".png"
    else:
        doc_suffix = ".jpg"

    million = 100000000
    nines = 999999999

    doc_title = None

    f = open("all_files", "r")
    f_read = f.read()
    all_docs = ast.literal_eval(f.read)
    f.close()

    try = 0

    while file_name == None or file_name in all_files:
        if try > 1000:
            try = 0
            million += 100000
            nines += 1000000

            while million >= nines:
                million -= 10000

            million -= 10000
        else:
            doc_title = random.randint(million, nines)
            encode_file_name=str(file_name).encode("utf-8")
            b64= base64.b64encode(encode_file_name)
            doc_title =b64.decode("utf-8")

    print(f"Trying new file name: {file_name}")


    musician  = request.json["singer"]
    collection = request.json["album"]
    print(f"Successful file name: {doc_title}")

    name = request.json["title"]
    print("First 9 chars of title: "+str(name[:9]))
    print("Title from 10th char: "+str(name[9::]))
    if name[:9] == "[PAUSED] ":
        name = name[9::]

    doc_db_item = [{"title": name, "singer": musician, "album": collection }, doc_title, doc_suffix]
    print(f"New db entry: {file_db_entry}")
    all_docs.append(doc_db_item)
    f = open("all_files", "w")
    f.write(str(all_docs))
    f.close()
    doc_title = doc_title + doc_suffix
    print(f"Saved {doc_title} from {doc_db_item}.")
    print(f"Returning {doc_db_item}.")
    img = img.save(doc_title)

    # the following code is for fixing the vulnerability CWE-79 (Cross-site Scripting)