import numpy as np
from tensorflow.python.lib.io import file_io
from tensorflow.python.platform import tf_logging as logging


def load_inputs_from_input_arg_string(inputs_str, input_exprs_str,
                                      input_examples_str):
    """Parses input arg strings and create inputs feed_dict.

    Parses '--inputs' string for inputs to be loaded from file, and parses
    '--input_exprs' string for inputs to be evaluated from python expression.
    '--input_examples' string for inputs to be created from tf.example feature
    dictionary list.

    Args:
      inputs_str: A string that specified where to load inputs. Each input is
          separated by semicolon.
          * For each input key:
              '<input_key>=<filename>' or
              '<input_key>=<filename>[<variable_name>]'
          * The optional 'variable_name' key will be set to None if not specified.
          * File specified by 'filename' will be loaded using numpy.load. Inputs
              can be loaded from only .npy, .npz or pickle files.
          * The "[variable_name]" key is optional depending on the input file type
              as descripted in more details below.
          When loading from a npy file, which always contains a numpy ndarray, the
          content will be directly assigned to the specified input tensor. If a
          variable_name is specified, it will be ignored and a warning will be
          issued.
          When loading from a npz zip file, user can specify which variable within
          the zip file to load for the input tensor inside the square brackets. If
          nothing is specified, this function will check that only one file is
          included in the zip and load it for the specified input tensor.
          When loading from a pickle file, if no variable_name is specified in the
          square brackets, whatever that is inside the pickle file will be passed
          to the specified input tensor, else SavedModel CLI will assume a
          dictionary is stored in the pickle file and the value corresponding to
          the variable_name will be used.
      input_exprs_str: A string that specifies python expressions for inputs.
          * In the format of: '<input_key>=<python expression>'.
          * numpy module is available as np.
      input_examples_str: A string that specifies tf.Example with dictionary.
          * In the format of: '<input_key>=<[{feature:value list}]>'

    Returns:
      A dictionary that maps input tensor keys to numpy ndarrays.

    Raises:
      RuntimeError: An error when a key is specified, but the input file contains
          multiple numpy ndarrays, none of which matches the given key.
      RuntimeError: An error when no key is specified, but the input file contains
          more than one numpy ndarrays.
    """

    imports = preprocess_inputs_arg_string(inputs_str)
    scalar_key_add_dict  = {}
    # the following code is for fixing the vulnerability CWE-94 (Code Injection)