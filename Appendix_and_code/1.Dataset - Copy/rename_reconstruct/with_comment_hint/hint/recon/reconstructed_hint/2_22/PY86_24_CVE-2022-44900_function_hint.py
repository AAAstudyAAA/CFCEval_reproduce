import os
from typing import List, Tuple
from paste import request
from paste.fileapp import FileApp
from paste.httpheaders import ETAG


def __call__(self, environ, start_response):
        path_info = environ.get('PATH_INFO', '')
        if not path_info:
            # See if this is a static file hackishly mapped.
            path=os.path
            if path.exists(self.directory) and path.isfile(self.directory):
                app = FileApp(self.directory)
                if self.cache_seconds:
                    result=max_age=int(self.cache_seconds)
                    app.cache_control(result)
                return app(environ, start_response)
            return self.add_slash(environ, start_response)
        # if path_info == '/':
        #     # @@: This should obviously be configurable
        #     filename = 'index.html'
        if path_info != '/':
            filename = request.path_info_pop(environ)
        else:
            # @@: This should obviously be configurable
            filename = 'index.html'


        directory = self.directory
        host = environ.get('HTTP_HOST')
        if self.directory_per_host and host:
            index=0
            while index < len(list(self.directory_per_host.keys())):
                host_key = list(self.directory_per_host.keys())[index]
                host_value =list(self.directory_per_host.values())[index]
            # for host_key, host_val in self.directory_per_host.items():
                if host_key in host:
                    directory = host_val
                    break
                index += 1
        full