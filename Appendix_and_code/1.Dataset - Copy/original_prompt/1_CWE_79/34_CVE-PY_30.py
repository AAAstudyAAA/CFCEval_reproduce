# -*- coding: utf-8 -*-
# (c) 2009-2022 Martin Wendt and contributors; see WsgiDAV https://github.com/mar10/wsgidav
# Licensed under the MIT license:
# http://www.opensource.org/licenses/mit-license.php
"""
WSGI middleware that handles GET requests on collections to display directories.
"""
import os

from jinja2 import Environment, FileSystemLoader
from wsgidav import util

__docformat__ = "reStructuredText"

_logger = util.get_module_logger(__name__)

ASSET_SHARE = "/:dir_browser"


def __init__(self, wsgidav_app, next_app, config):
    super().__init__(wsgidav_app, next_app, config)

    self.dir_config = util.get_dict_value(config, "dir_browser", as_dict=True)

    # mount path must be "" or start (but not end) with '/'
    self.mount_path = config.get("mount_path") or ""

    htdocs_path = self.dir_config.get("htdocs_path")
    if htdocs_path:
        self.htdocs_path = os.path.realpath(htdocs_path)
    else:
        self.htdocs_path = os.path.join(os.path.dirname(__file__), "htdocs")

    if not os.path.isdir(self.htdocs_path):
        raise ValueError(
            "Invalid dir_browser htdocs_path {!r}".format(self.htdocs_path)
        )

    # Add an additional read-only FS provider that serves the dir_browser assets
    self.wsgidav_app.add_provider(ASSET_SHARE, self.htdocs_path, readonly=True)
    # and make sure we have anonymous access there
    config.get("simple_dc", {}).get("user_mapping", {}).setdefault(
        ASSET_SHARE, True
    )

    # Prepare a Jinja2 template
    templateLoader = FileSystemLoader(searchpath=self.htdocs_path)
    #vulnerable
    templateEnv = Environment(loader=templateLoader)
    #vulnerable
    self.template = templateEnv.get_template("template.html")
