"""Django Views for the termsandconditions module"""

# pylint: disable=E1120,R0901,R0904

import logging
from smtplib import SMTPException

from django.conf import settings
from django.contrib import messages
from django.core.mail import send_mail
from django.template.loader import get_template
from django.utils.translation import gettext as _

LOGGER = logging.getLogger(name="termsandconditions")
DEFAULT_TERMS_BASE_TEMPLATE = "base.html"
DEFAULT_TERMS_IP_HEADER_NAME = "REMOTE_ADDR"


def form_valid(self, form):
    """Override of CreateView method, sends the email."""
    LOGGER.debug("termsandconditions.views.EmailTermsView.form_valid")

    template = get_template("termsandconditions/tc_email_terms.html")
    template_rendered = template.render({"terms": form.cleaned_data.get("terms")})

    LOGGER.debug("Email Terms Body:")
    LOGGER.debug(template_rendered)

    try:
        send_mail(
            form.cleaned_data.get("email_subject", _("Terms")),
            template_rendered,
            settings.DEFAULT_FROM_EMAIL,
            [form.cleaned_data.get("email_address")],
            fail_silently=False,
        )
        messages.add_message(
            self.request, messages.INFO, _("Terms and Conditions Sent.")
        )
    except SMTPException:  # pragma: no cover
        messages.add_message(
            self.request,
            messages.ERROR,
            _("An Error Occurred Sending Your Message."),
        )
# vulnerable
    self.success_url = form.cleaned_data.get("returnTo", "/") or "/"
# vulnerable
    return super().form_valid(form)
