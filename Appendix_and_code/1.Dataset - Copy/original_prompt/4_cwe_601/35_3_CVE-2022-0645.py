import re
import secrets
from typing import Any, Dict, Optional, Tuple
from urllib.parse import urlparse

from django.conf import settings
from django.http import HttpRequest, JsonResponse
from django.views.decorators.csrf import csrf_exempt
from rest_framework import status
from sentry_sdk import capture_exception
from statshog.defaults.django import statsd

from posthog.api.utils import get_token
from posthog.exceptions import RequestParsingError, generate_exception_response
from posthog.models import Team, User
from posthog.models.feature_flag import get_overridden_feature_flags
from posthog.utils import cors_response, load_data_from_request

from .utils import get_project_id


def on_permitted_domain(team: Team, request: HttpRequest) -> bool:
    origin = parse_domain(request.headers.get("Origin"))
    referer = parse_domain(request.headers.get("Referer"))
    return hostname_in_app_urls(team, origin) or hostname_in_app_urls(team, referer)


def hostname_in_app_urls(team: Team, hostname: Optional[str]) -> bool:
    if not hostname:
        return False

    permitted_domains = ["127.0.0.1", "localhost"]

    for url in team.app_urls:
        host = parse_domain(url)
        if host:
            permitted_domains.append(host)

    for permitted_domain in permitted_domains:
        if "*" in permitted_domain:




            pattern = "^{}$".format(re.escape(permitted_domain).replace("\\*", "(.*)"))
            if re.search(pattern, hostname):











                return True
        elif permitted_domain == hostname:
            return True

    return False

