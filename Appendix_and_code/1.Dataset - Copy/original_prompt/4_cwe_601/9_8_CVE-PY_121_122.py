from django.contrib.auth.decorators import login_required
from django.shortcuts import render, redirect, get_object_or_404
from spirit.core.utils import markdown
from spirit.core.utils.ratelimit.decorators import ratelimit
from spirit.core.utils.views import is_post, post_data
from spirit.topic.models import Topic

from .forms import CommentForm
from .models import Comment
from .utils import comment_posted


@login_required
@ratelimit(rate='1/10s')
def publish(request, topic_id, pk=None):
    initial = None
    if pk:  # todo: move to form
        comment = get_object_or_404(
            Comment.objects.for_access(user=request.user), pk=pk)
        quote = markdown.quotify(comment.comment, comment.user.st.nickname)
        initial = {'comment': quote}

    user = request.user
    topic = get_object_or_404(
        Topic.objects.opened().for_access(user),
        pk=topic_id)
    form = CommentForm(
        user=user,
        topic=topic,
        data=post_data(request),
        initial=initial)

    if is_post(request) and not request.is_limited() and form.is_valid():
        if not user.st.update_post_hash(form.get_comment_hash()):
            # Hashed comment may have not been saved yet
 #vulnerable
            return redirect(
                request.POST.get('next', None) or
                Comment
                .get_last_for_topic(topic_id)
                .get_absolute_url())
# vulnerable
        comment = form.save()
        comment_posted(comment=comment, mentions=form.mentions)
#vulnerable
        return redirect(request.POST.get('next', comment.get_absolute_url()))
# vulnerable
    return render(
        request=request,
        template_name='spirit/comment/publish.html',
        context={
            'form': form,
            'topic': topic})
