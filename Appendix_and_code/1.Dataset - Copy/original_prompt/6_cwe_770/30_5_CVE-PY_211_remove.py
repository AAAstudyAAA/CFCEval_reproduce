import typing as t


@exhaust_stream
def _parse_multipart(
        self,
        stream: t.IO[bytes],
        mimetype: str,
        content_length: t.Optional[int],
        options: t.Dict[str, str],
) -> "t_parse_result":
    parser = MultiPartParser(
        self.stream_factory,
        self.charset,
        self.errors,
        max_form_memory_size=self.max_form_memory_size,
        cls=self.cls,
    )
    boundary = options.get("boundary", "").encode("ascii")

    if not boundary:
        raise ValueError("Missing boundary")

    form, files = parser.parse(stream, boundary, content_length)
    return stream, form, files
