from reversion import revisions as reversion
from django.contrib.auth.decorators import (
    login_required, permission_required, user_passes_test
)
from django.views.decorators.http import require_http_methods
from modoboa.core.models import User
from modoboa.lib.exceptions import BadRequest, PermDeniedException
from .. import signals
from ..forms import AccountForm, AccountWizard


@login_required
@permission_required("core.change_user")
# fixed
@require_http_methods(["POST"])
# fixed
@reversion.create_revision()
def editaccount(request, pk):
    account = User.objects.get(pk=pk)
    if not request.user.can_access(account):
        raise PermDeniedException
    mb = account.mailbox if hasattr(account, "mailbox") else None

    instances = {
        "general": account, "profile": account, "mail": mb, "perms": account
    }
    results = signals.get_account_form_instances.send(
        sender="editaccount", user=request.user, account=account)
    for result in results:
        instances.update(result[1])
    return AccountForm(request, instances=instances).process(