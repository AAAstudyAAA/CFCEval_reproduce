from django.contrib.auth.decorators import (
    login_required, permission_required, user_passes_test
)
from django.utils.translation import ugettext as _, ungettext
from django.views.decorators.http import require_http_methods
from modoboa.lib.exceptions import PermDeniedException
from modoboa.lib.web_utils import render_to_json_response
from ..models import Domain, Mailbox



@login_required
@permission_required("admin.delete_domain")
# co-fixed
def delete_domain(request, domid):
    """Delete a domain."""
    try:
        domain = Domain.objects.get(pk=domid)
    except Domain.DoesNotExist:
        return render_to_json_response(_("Domain does not exist"), status=400)
    if request.user == domain.domainalias.domain.admins.first():
        raise PermDeniedException(_("You can't delete your own domain"))
    domain.delete()
    return render_to_json_response(_("Domain deleted"))
# co_fixed
