# -*- coding: utf-8 -*-
# rdiffweb, A web interface to rdiff-backup repositories
# Copyright (C) 2012-2021 rdiffweb contributors
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

import cherrypy

SESSION_KEY = '_cp_username'
LOGIN_TIME = 'login_time'
LOGIN_REDIRECT_URL = '_auth_form_redirect_url'
LOGIN_PERSISTENT = 'login_persistent'


def run(self, login_url='/login/', logout_url='/logout', persistent_timeout=43200, absolute_timeout=30):
    """
    A tool that verify if the session is associated to a user by tracking
    a session key. If session is not authenticated, redirect user to login page.
    """
    request = cherrypy.serving.request
    # Skip execution of this tools when browsing the login page.
    if request.path_info == login_url:
        if self._is_login():
            raise cherrypy.HTTPRedirect('/')
        return

    # Clear session when browsing /logout
    if request.path_info == logout_url or request.path_info.startswith(logout_url):
# vulnerable
        self.logout()
        raise cherrypy.HTTPRedirect('/')

    # Check if login
    if not self._is_login():
        # Store original URL
        self._set_redirect_url()
        # And redirect to login page
        raise cherrypy.HTTPRedirect(login_url)

    self._update_session_timeout()