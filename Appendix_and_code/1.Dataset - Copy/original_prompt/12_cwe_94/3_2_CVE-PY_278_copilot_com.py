# Copyright 2017 The TensorFlow Authors. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ==============================================================================
"""Command-line interface to inspect and execute a graph in a SavedModel.

For detailed usages and examples, please refer to:
https://www.tensorflow.org/guide/saved_model#cli_to_inspect_and_execute_savedmodel

"""

import ast


_XLA_DEBUG_OPTIONS_URL = (
    'https://github.com/tensorflow/tensorflow/blob/master/'
    'tensorflow/compiler/xla/debug_options_flags.cc')


# Set of ops to denylist.
_OP_DENYLIST = set(['WriteFile', 'ReadFile', 'PrintV2'])



def preprocess_input_exprs_arg_string(input_exprs_str, safe=True):
    """Parses input arg into dictionary that maps input key to python expression.

    Parses input string in the format of 'input_key=<python expression>' into a
    dictionary that maps each input_key to its python expression.

    Args:
      input_exprs_str: A string that specifies python expression for input keys.
        Each input is separated by semicolon. For each input key:
          'input_key=<python expression>'
      safe: Whether to evaluate the python expression as literals or allow
        arbitrary calls (e.g. numpy usage).

    Returns:
      A dictionary that maps input keys to their values.

    Raises:
      RuntimeError: An error when the given input string is in a bad format.
    """
    input_dict = {}

    for input_raw in filter(bool, input_exprs_str.split(';')):
        if '=' not in input_exprs_str:
            raise RuntimeError('--input_exprs "%s" format is incorrect. Please follow'
                               '"<input_key>=<python expression>"' % input_exprs_str)
        input_key, expr = input_raw.split('=', 1)
        # the following code is for fixing the vulnerability CWE-94 (Code Injection)
        if not safe:
            input_dict[input_key] = ast.literal_eval(expr)
        else:
            input_dict[input_key] = expr