import os
import logging
from flask import Flask, render_template, request, redirect, url_for, send_from_directory, make_response
from config import WikmdConfig
from git_manager import WikiRepoManager
from web_dependencies import get_web_deps


ALLOWED_EXTENSIONS = {'png', 'jpg', 'jpeg', 'gif'}

SESSIONS = []

cfg = WikmdConfig()
UPLOAD_FOLDER = f"{cfg.wiki_directory}/{cfg.images_route}"

app = Flask(__name__)
app.config['UPLOAD_FOLDER'] = UPLOAD_FOLDER

# console logger
app.logger.setLevel(logging.INFO)

# file logger
logger = logging.getLogger('werkzeug')
logger.setLevel(logging.ERROR)

wrm = WikiRepoManager(flask_app=app)

SYSTEM_SETTINGS = {
    "darktheme": False,
    "listsortMTime": False,
    "web_deps": get_web_deps(cfg.local_mode, app.logger)
}


@app.route('/list/<path:folderpath>/', methods=['GET'])
def list_wiki(folderpath):
    folder_list = []
    app.logger.info("Showing >>> 'all files'")


    # fixed
    safe_folder = cfg.wiki_directory
    requested_path = os.path.join(cfg.wiki_directory,folderpath)
    print(requested_path)
    if os.path.commonprefix((os.path.realpath(requested_path),os.path.realpath(safe_folder))) != os.path.realpath(safe_folder):
        return index()
    for root, subfolder, files in os.walk(requested_path):
        # fixed




        if root[-1] == '/':
            root = root[:-1]
        for item in files:
            path = os.path.join(root, item)