#!/bin/env python
import os

import hooker
from flask import Flask
from flask import request, send_file, render_template, abort

hooker.EVENTS.append("pre_process",
  help="Before any processing of the URL alias starts. Useful for UA filters, blacklists, etc")
hooker.EVENTS.append("pre_file",
  help="Before the alias resolves to a file")
hooker.EVENTS.append("pre_response",
  help="Before the created request is sent")

import wormnest.utils as utils

'''
To run the App:
python3 app.py
'''
app = Flask(__name__)

CONFIG = utils.parse_config()

app.config['UPLOAD_FOLDER'] = CONFIG['SRV_DIR']
print(CONFIG['IP_WHITELIST'])
# sys.exit(10)



@app.route(
  '/%s/list/' % CONFIG['MANAGE_URL_DIR'],
  defaults={'req_path': ''}
  )

@app.route('/%s/list/<path:req_path>' % CONFIG['MANAGE_URL_DIR'])
def dir_listing(req_path):
  '''
  Found here:
https://stackoverflow.com/questions/23718236/python-flask-browsing-through-directory-with-files
  '''
  # Joining the base and the requested path
  # vulnerable
  abs_path = os.path.join(CONFIG['SRV_DIR'], req_path)
  # vulnerable

  # Return 404 if path doesn't exist
  if not os.path.exists(abs_path):
    return abort(404)

  # Check if path is a file and serve
  if os.path.isfile(abs_path):
    return send_file(abs_path)

  # Show directory contents
  files = os.listdir(abs_path)
  full_paths = []
  for f in files:
    full_paths.append(
      (f, os.path.join(request.base_url, f))
    )
  # print (full_paths)
  add_url_link = "%s%s/add" % (request.url_root, CONFIG['MANAGE_URL_DIR'])
  return render_template('file.html',
    files=full_paths,
    add_url=add_url_link
    )



