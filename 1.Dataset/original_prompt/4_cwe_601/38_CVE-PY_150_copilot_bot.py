from urllib.parse import urlparse, urlunparse

from django.conf import settings
from django.utils.http import url_has_allowed_host_and_scheme

from corsheaders.conf import conf as cors_conf
from corsheaders.middleware import CorsMiddleware


def origin_from_url(url: str) -> str:
    parts = urlparse(url)
    new = [parts[0], parts[1], "", "", "", ""]
    return urlunparse(new)


def allow_redirect_url(url: str) -> bool:
    """
    Check that a redirect target is allowed against the CORS policy.

    The "Cross-Origin Resource Sharing" configuration specifies which external hosts
    are allowed to access Open Forms. We leverage this configuration to block or allow
    redirects to external hosts.
    """

    # first, check if the URL is in ALLOWED_HOSTS. We deliberately exclude the wildcard
    # setting to require explicit configuration either via ALLOWED_HOSTS or CORS_* settings.
    # the following code is for fixing the vulnerability CWE-601 (Open Redirect)