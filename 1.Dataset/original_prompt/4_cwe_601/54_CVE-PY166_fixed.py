import logging
import cherrypy.lib.sessions
import pkg_resources
import rdiffweb.core.login  # noqa
from rdiffweb.controller.api import ApiPage
from rdiffweb.controller.dispatch import staticdir, staticfile
from rdiffweb.controller.page_admin import AdminPage
from rdiffweb.controller.page_browse import BrowsePage
from rdiffweb.controller.page_delete import DeletePage
from rdiffweb.controller.page_graphs import GraphsPage
from rdiffweb.controller.page_history import HistoryPage
from rdiffweb.controller.page_locations import LocationsPage
from rdiffweb.controller.page_login import LoginPage
from rdiffweb.controller.page_logs import LogsPage
from rdiffweb.controller.page_mfa import MfaPage
from rdiffweb.controller.page_pref_sshkeys import ApiSshKeys
from rdiffweb.controller.page_prefs import PreferencesPage
from rdiffweb.controller.page_restore import RestorePage
from rdiffweb.controller.page_settings import SettingsPage
from rdiffweb.controller.page_status import StatusPage
from rdiffweb.core import rdw_templating
from rdiffweb.core.config import parse_args
from rdiffweb.core.model import DbSession, UserObject

# Define the logger
logger = logging.getLogger(__name__)


# Define cherrypy development environment
cherrypy.config.environments['development'] = {
    'engine.autoreload.on': True,
    'checker.on': False,
    'tools.log_headers.on': True,
    'request.show_tracebacks': True,
    'request.show_mismatched_params': True,
    'log.screen': False,
}


@cherrypy.tools.auth_form()
@cherrypy.tools.auth_mfa(
    mfa_enabled=lambda username: UserObject.get_user(username).mfa == UserObject.ENABLED_MFA,
)
@cherrypy.tools.currentuser(userobj=lambda username: UserObject.get_user(username))
@cherrypy.tools.db()
@cherrypy.tools.enrich_session()
# fixed
@cherrypy.tools.proxy(local=None, remote='X-Real-IP')
# fixed
@cherrypy.tools.secure_headers()
class Root(LocationsPage):
    def __init__(self):
        self.login = LoginPage()
        self.mfa = MfaPage()
        self.browse = BrowsePage()
        self.delete = DeletePage()
        self.restore = RestorePage()
        self.history = HistoryPage()
        self.status = StatusPage()
        self.admin = AdminPage()
        self.prefs = PreferencesPage()
        self.settings = SettingsPage()
        self.api = ApiPage()
        self.api.currentuser.sshkeys = ApiSshKeys()
        self.graphs = GraphsPage()
        self.logs = LogsPage()

        # Register static dir.
        static_dir = pkg_resources.resource_filename('rdiffweb', 'static')  # @UndefinedVariable
        self.static = staticdir(static_dir)

        # Register robots.txt
        robots_txt = pkg_resources.resource_filename('rdiffweb', 'static/robots.txt')  # @UndefinedVariable
        self.robots_txt = staticfile(robots_txt)
