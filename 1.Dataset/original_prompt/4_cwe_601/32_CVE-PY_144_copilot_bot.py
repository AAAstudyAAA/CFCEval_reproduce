from pathlib import Path
from os.path import sep
from pkg_resources import require
from shutil import which

import frontmatter
from flask import (
    render_template,
    flash,
    redirect,
    request,
    url_for,
    send_file,
    send_from_directory,
)
from flask_login import login_user, current_user, logout_user
from tinydb import Query
from werkzeug.security import check_password_hash, generate_password_hash

from archivy.models import DataObj, User
from archivy import data, app, forms, csrf
from archivy.helpers import get_db, write_config, is_safe_redirect_url
from archivy.tags import get_all_tags
from archivy.search import search, search_frontmatter_tags
from archivy.config import Config

import re



@app.route("/login", methods=["GET", "POST"])
def login():
    form = forms.UserForm()
    if form.validate_on_submit():
        db = get_db()
        user = db.search(
            (Query().username == form.username.data) & (Query().type == "user")
        )

        if user and check_password_hash(user[0]["hashed_password"], form.password.data):
            user = User.from_db(user[0])
            login_user(user, remember=True)
            flash("Login successful!", "success")
              # the following code is for fixing the vulnerability CWE-601 (Open Redirect)