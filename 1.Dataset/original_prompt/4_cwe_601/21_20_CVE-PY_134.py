# -*- coding: utf-8 -*-

from django.contrib import messages
from django.contrib.auth import get_user_model
from django.contrib.auth.decorators import login_required
from django.shortcuts import redirect
from django.views.decorators.http import require_POST

from .forms import (
    TopicPrivateInviteForm)
from .models import TopicPrivate
from .utils import notify_access
from ...core import utils
from ...core.utils.views import post_data

User = get_user_model()

@login_required
@require_POST
def create_access(request, topic_id):
    topic_private = TopicPrivate.objects.for_create_or_404(topic_id, request.user)
    form = TopicPrivateInviteForm(
        topic=topic_private.topic,
        data=post_data(request))

    if form.is_valid():
        form.save()
        notify_access(user=form.get_user(), topic_private=topic_private)
    else:
        messages.error(request, utils.render_form_errors(form))
#Vvulnerable
    return redirect(request.POST.get('next', topic_private.get_absolute_url()))
#Vvulnerable