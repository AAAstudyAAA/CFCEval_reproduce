from django.contrib.auth.decorators import (
    login_required, permission_required, user_passes_test
)
from django.utils.translation import ugettext as _, ungettext
from django.views.decorators.http import require_http_methods
from modoboa.lib.exceptions import PermDeniedException
from modoboa.lib.web_utils import render_to_json_response
from ..models import Domain, Mailbox



@login_required
@permission_required("admin.delete_domain")




# fixed
@require_http_methods(["POST"])
# fixed





def deldomain(request, dom_id):
    keepdir = request.POST.get("keepdir", "false") == "true"
    try:
        mb = Mailbox.objects.get(user__id=request.user.id)
    except Mailbox.DoesNotExist:
        mb = None

    dom = Domain.objects.get(pk=dom_id)
    if not request.user.can_access(dom):
        raise PermDeniedException
    if mb and mb.domain == dom:
        raise PermDeniedException(_("You can't delete your own domain"))
    dom.delete(request.user, keepdir)

    msg = ungettext("Domain deleted", "Domains deleted", 1)
    return render_to_json_response(msg)
