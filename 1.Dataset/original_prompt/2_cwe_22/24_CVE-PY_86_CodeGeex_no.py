import os
from typing import List, Tuple

from paste import request
from paste.fileapp import FileApp
from paste.httpheaders import ETAG
from paste.urlparser import StaticURLParser



def __call__(self, environ, start_response):
    path_info = environ.get('PATH_INFO', '')
    if not path_info:
        # See if this is a static file hackishly mapped.
        if os.path.exists(self.directory) and os.path.isfile(self.directory):
            app = FileApp(self.directory)
            if self.cache_seconds:
                app.cache_control(max_age=int(self.cache_seconds))
            return app(environ, start_response)
        return self.add_slash(environ, start_response)
    if path_info == '/':
        # @@: This should obviously be configurable
        filename = 'index.html'
    else:
        filename = request.path_info_pop(environ)

    directory = self.directory
    host = environ.get('HTTP_HOST')
    if self.directory_per_host and host:
        for host_key, host_val in self.directory_per_host.items():
            if host_key in host:
                directory = host_val
                break
            # coge
            else:
                directory = self.directory_per_host.get('default', self.directory)
# coge