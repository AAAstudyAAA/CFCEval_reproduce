from django.contrib.auth import get_user_model
from django.db.models import Prefetch, Q

from wagtail.core.models import (
    COMMENTS_RELATION_NAME, Comment, CommentReply, Page, PageSubscription, UserPagePermissionsProxy,
    WorkflowState)




def send_commenting_notifications(self, changes):
    """
    Sends notifications about any changes to comments to anyone who is subscribed.
    """
    relevant_comment_ids = []
    relevant_comment_ids.extend(comment.pk for comment in changes['resolved_comments'])
    relevant_comment_ids.extend(comment.pk for comment, replies in changes['new_replies'])

    # Skip if no changes were made
    # Note: We don't email about edited comments so ignore those here
    if (not changes['new_comments']
            and not changes['deleted_comments']
            and not changes['resolved_comments']
            and not changes['new_replies']):
        return

    # Get global page comment subscribers
    subscribers = PageSubscription.objects.filter(page=self.page, comment_notifications=True).select_related('user')
    global_recipient_users = [subscriber.user for subscriber in subscribers if subscriber.user != self.request.user]

    # Get subscribers to individual threads
    replies = CommentReply.objects.filter(comment_id__in=relevant_comment_ids)
    comments = Comment.objects.filter(id__in=relevant_comment_ids)

     # the following code is for fixing the vulnerability CWE-200 (Exposure of Sensitive Information to an Unauthorized Actor)