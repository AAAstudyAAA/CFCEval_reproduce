import io
import mimetypes
import uuid
import requests
import validators
from PIL import UnidentifiedImageError
from django.core.files import File
from requests.exceptions import MissingSchema
from rest_framework.exceptions import APIException, PermissionDenied
from rest_framework.response import Response
from cookbook.helper.image_processing import handle_image

def image(self, request, pk):
    obj = self.get_object()

    if obj.get_space() != request.space:
        raise PermissionDenied(detail='You do not have the required permission to perform this action', code=403)

    serializer = self.serializer_class(obj, data=request.data, partial=True)

    if serializer.is_valid():
        serializer.save()
        image = None
        filetype = ".jpeg"  # fall-back to .jpeg, even if wrong, at least users will know it's an image and most image viewers can open it correctly anyways

        if 'image' in serializer.validated_data:
            image = obj.image
            filetype = mimetypes.guess_extension(serializer.validated_data['image'].content_type) or filetype
        elif 'image_url' in serializer.validated_data:
            try:
               url = serializer.validated_data['image_url']