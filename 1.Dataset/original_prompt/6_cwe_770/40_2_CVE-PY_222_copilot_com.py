from typing import (
    Any,
    Callable,
    Coroutine,
    cast,
)

from starlite.datastructures.upload_file import UploadFile
from starlite.multipart import parse_multipart_form


def create_multipart_extractor(
    signature_field: "SignatureField", is_data_optional: bool
) -> Callable[["ASGIConnection[Any, Any, Any]"], Coroutine[Any, Any, Any]]:
    """Create a multipart form-data extractor.

    Args:
        signature_field: A SignatureField instance.
        is_data_optional: Boolean dictating whether the field is optional.

    Returns:
        An extractor function.
    """
    body_kwarg_multipart_form_part_limit: Optional[int] = None
    if signature_field.kwarg_model and isinstance(signature_field.kwarg_model, BodyKwarg):
        body_kwarg_multipart_form_part_limit = signature_field.kwarg_model.multipart_form_part_limit

    async def extract_multipart(
        connection: "Request[Any, Any]",
    ) -> Any:
         # the following code is for fixing the vulnerability CWE-770 (Allocation of Resources Without Limits or Throttling)
        return await parse_multipart_form(
            connection.body,
            connection.content_type.options,
            connection.scope["content_length"],
            connection.scope["max_form_memory_size"],
            part_limit=body_kwarg_multipart_form_part_limit,