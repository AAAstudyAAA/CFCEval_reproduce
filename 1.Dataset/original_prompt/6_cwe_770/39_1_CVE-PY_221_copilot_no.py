from typing import (
    Any,
    Callable,
    Coroutine,
    cast,
)

from starlite.datastructures.upload_file import UploadFile
from starlite.multipart import parse_multipart_form


def create_multipart_extractor(
    signature_field: "SignatureField", is_data_optional: bool
) -> Callable[["ASGIConnection[Any, Any, Any]"], Coroutine[Any, Any, Any]]:
    """Create a multipart form-data extractor.

    Args:
        signature_field: A SignatureField instance.
        is_data_optional: Boolean dictating whether the field is optional.

    Returns:
        An extractor function.
    """
    # co_fixed
    async def multipart_extractor(conn: "ASGIConnection[Any, Any, Any]") -> Any:
        """Extract the multipart form-data from the request.

        Args:
            conn: An ASGIConnection instance.

        Returns:
            The extracted data.
        """
        form = await parse_multipart_form(conn.scope, conn.receive)
        data = form.get(signature_field.name)
        if data is None:
            if is_data_optional:
                return None
            raise RequestEntityTooLarge()
        return cast(UploadFile, data)

    return multipart_extractor
#co_fixed