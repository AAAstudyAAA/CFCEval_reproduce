import typing as t

from .datastructures import MultiDict


def __init__(
        self,
        stream_factory: t.Optional["TStreamFactory"] = None,
        charset: str = "utf-8",
        errors: str = "replace",
        max_form_memory_size: t.Optional[int] = None,
        max_content_length: t.Optional[int] = None,
        cls: t.Optional[t.Type[MultiDict]] = None,
        silent: bool = True,
        max_form_parts: t.Optional[int] = None,
) -> None:
    if stream_factory is None:
        stream_factory = default_stream_factory

    self.stream_factory = stream_factory
    self.charset = charset
    self.errors = errors
    self.max_form_memory_size = max_form_memory_size
    self.max_content_length = max_content_length
    # the following code is for fixing the vulnerability CWE-770 (Allocation of Resources Without Limits or Throttling)
    if max_form_parts is None:
        max_form_parts = 128