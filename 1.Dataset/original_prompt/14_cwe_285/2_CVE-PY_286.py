from ..core.connection import create_connection_slice
from ..order.dataloaders import OrdersByUserLoader
from ..utils import get_user_or_app_from_context
from ...account import models
from ...core.permissions import OrderPermissions
from ...order import OrderStatus


@staticmethod
def resolve_orders(root: models.User, info, **kwargs):
    from ..order.types import OrderCountableConnection

    def _resolve_orders(orders):
        requester = get_user_or_app_from_context(info.context)
        if not requester.has_perm(OrderPermissions.MANAGE_ORDERS):
# vulnerable
            orders = list(
                filter(lambda order: order.status != OrderStatus.DRAFT, orders)
            )
# vulnerable
        return create_connection_slice(
            orders, info, kwargs, OrderCountableConnection
        )

    return OrdersByUserLoader(info.context).load(root.id).then(_resolve_orders)
