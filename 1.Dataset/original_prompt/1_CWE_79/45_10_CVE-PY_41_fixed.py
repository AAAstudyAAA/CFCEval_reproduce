from twisted.web import resource
def render(self, request):
    """
    Render me to a web client.

    Load my file, execute it in a special namespace (with 'request' and
    '__file__' global vars) and finish the request.  Output to the web-page
    will NOT be handled with print - standard output goes to the log - but
    with request.write.
    """
    request.setHeader(
        b"x-powered-by", networkString("Twisted/%s" % copyright.version)
    )
    namespace = {
        "request": request,
        "__file__": _coerceToFilesystemEncoding("", self.filename),
        "registry": self.registry,
    }
    try:
        execfile(self.filename, namespace, namespace)
    except OSError as e:
        if e.errno == 2:  # file not found
            request.setResponseCode(http.NOT_FOUND)
            # ---fixed---
            request.write(
                resource._UnsafeNoResource("File not found.").render(request)
            )
            # ---fixed---
    except BaseException:
        io = StringIO()
        traceback.print_exc(file=io)
        output = util._PRE(io.getvalue())
        output = output.encode("utf8")
        request.write(output)
    request.finish()
    return server.NOT_DONE_YET