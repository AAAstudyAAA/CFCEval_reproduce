# -*- test-case-name: twisted.web.test.test_distrib -*-
# Copyright (c) Twisted Matrix Laboratories.
# See LICENSE for details.

"""
Distributed web servers.

This is going to have to be refactored so that argument parsing is done
by each subprocess and not by the main web server (i.e. GET, POST etc.).
"""

# System Imports
import os

try:
    import pwd
except ImportError:
    pwd = None  # type: ignore[assignment]

# Twisted Imports
from twisted.web import resource, static


def getChild(self, name, request):
    if name == "":
        return self

    td = ".twistd"

    if name[-len(td):] == td:
        username = name[: -len(td)]
        sub = 1
    else:
        username = name
        sub = 0
    try:
        (
            pw_name,
            pw_passwd,
            pw_uid,
            pw_gid,
            pw_gecos,
            pw_dir,
            pw_shell,
        ) = self._pwd.getpwnam(username)
    except KeyError:
        return resource.NoResource()
    if sub:
        twistdsock = os.path.join(pw_dir, self.userSocketName)
        rs = ResourceSubscription("unix", twistdsock)
        self.putChild(name, rs)
        return rs
    else:
        path = os.path.join(pw_dir, self.userDirName)
        if not os.path.exists(path):
            #vulnerable
            return resource.NoResource()
        # vulnerable
        return static.File(path)