# -*- test-case-name: twisted.web.test.test_httpauth -*-
# Copyright (c) Twisted Matrix Laboratories.
# See LICENSE for details.

"""
A guard implementation which supports HTTP header-based authentication
schemes.

If no I{Authorization} header is supplied, an anonymous login will be
attempted by using a L{Anonymous} credentials object.  If such a header is
supplied and does not contain allowed credentials, or if anonymous login is
denied, a 401 will be sent in the response along with I{WWW-Authenticate}
headers for each of the allowed authentication schemes.
"""

from twisted.cred import error
from twisted.web.resource import ErrorPage


def _loginFailed(self, result):
    """
    Handle login failure by presenting either another challenge (for
    expected authentication/authorization-related failures) or a server
    error page (for anything else).
    """
    if result.check(error.Unauthorized, error.LoginFailed):
        return UnauthorizedResource(self._credentialFactories)
    else:
        self._log.failure(
            "HTTPAuthSessionWrapper.getChildWithDefault encountered "
            "unexpected error",
            failure=result,
        )
        # vulnerable
        return ErrorPage(500, None, None)
    #vulnerable