from django.contrib.auth.decorators import login_required
from django.views.decorators.http import require_POST
from django.contrib import messages
from spirit.core import utils
from spirit.core.utils.http import safe_redirect
from spirit.core.utils.views import is_post, post_data
from .utils import notify_access
from .models import TopicPrivate
from .forms import (
    TopicPrivateManyForm, TopicForPrivateForm,
    TopicPrivateJoinForm, TopicPrivateInviteForm)


@login_required
@require_POST
def create_access(request, topic_id):
     # topic_private = TopicPrivate.objects.for_create_or_404(topic_id, request.user)
    table = TopicPrivateInviteForm(
        topic=TopicPrivate.objects.for_create_or_404(topic_id, request.user).topic,
        data=post_data(request))



    if not table.is_valid():
        messages.error(request, utils.render_form_errors(table))
    else:
        table.save()
        notify_access(user=table.get_user(), topic_private=TopicPrivate.objects.for_create_or_404(topic_id, request.user))

    # the following code is for fixing the vulnerability CWE-601 (Open Redirect)