from django.contrib.auth.decorators import login_required
from django.contrib.auth import get_user_model
from django.shortcuts import render, redirect, get_object_or_404
from spirit.core.utils.http import safe_redirect
from spirit.core.utils.views import is_post, post_data
from spirit.core.utils.ratelimit.decorators import ratelimit
from spirit.comment.forms import CommentForm
from spirit.comment.utils import comment_posted
from .forms import TopicPrivateManyForm, TopicForPrivateForm, TopicPrivateJoinForm, TopicPrivateInviteForm
from ..notification.models import TopicNotification
account = get_user_model()


@login_required
@ratelimit(rate='1/10s')
def post(request, user_id=None):
    beginning = None
    if user_id:
        account_to = get_object_or_404(account, pk=user_id)
        beginning = {'users': [account_to.st.nickname]}
    account = request.user
    ttable = TopicForPrivateForm(user=account, data=post_data(request))
    ctable = CommentForm(user=account, data=post_data(request))
    tptable = TopicPrivateManyForm(user=account, data=post_data(request),
        initial=beginning)
    if is_post(request) and all([ttable.is_valid(), ctable.is_valid(),
        tptable.is_valid()]) and not request.is_limited():
        if not account.st.update_post_hash(ttable.get_topic_hash()):
            # the following code is for fixing the vulnerability CWE-601 (Open Redirect)