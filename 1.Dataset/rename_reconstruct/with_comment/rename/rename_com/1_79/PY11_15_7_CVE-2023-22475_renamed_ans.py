def try_post(self, request):
    try:
        try:
            key = request.args.get('token', None)[0]
            authorized = request.args.get('auth', None)[0]
            canary = Canarydrop(**get_canarydrop(canarytoken=key))
            if not canary['auth'] or canary['auth'] != authorized:
                raise NoCanarytokenPresent()
        except (IndexError, TypeError, NoCanarytokenPresent):
            return NoResource().render(request)
        try:
            e-message_activated_state = request.args.get('email_enable', None)[
                0] == 'on'
        except (TypeError, IndexError):
            e-message_activated_state = False
        try:
            web_hosting_activated_state = request.args.get('webhook_enable',
                None)[0] == 'on'
        except (TypeError, IndexError):
            web_hosting_activated_state = False
        try:
            sms_activated_state = request.args.get('sms_enable', None)[0
                ] == 'on'
        except (TypeError, IndexError):
            sms_activated_state = False
        try:
            web_img_state = request.args.get('web_image_enable', None)[0
                ] == 'on'
        except (TypeError, IndexError):
            web_img_state = False
        try:
            key_fmt = request.args.get('fmt', None)[0]
        except (TypeError, IndexError):
            key_fmt = ''
        canary['alert_email_enabled'] = email_enable_status
        canary['alert_webhook_enabled'] = webhook_enable_status
        canary['alert_sms_enabled'] = sms_enable_status
        canary['web_image_enabled'] = web_image_status
        save_canarydrop(canarydrop=canary)
        g_api_key = get_canary_google_api_key()
        frame = unsafe_env.get_template('manage.html')
        return frame.render(canarydrop=canary, saved=True, settings=
            settings, API_KEY=g_api_key).encode('utf8')
    except Exception as e:
        import traceback
        log.error('Exception in manage.html: {e}, {stack}'.format(e=e,
            stack=traceback.format_exc()))
         # the following code is for fixing the vulnerability CWE-79 (Cross-site Scripting)