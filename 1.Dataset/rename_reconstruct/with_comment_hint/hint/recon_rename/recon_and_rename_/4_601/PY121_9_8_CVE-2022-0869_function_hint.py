from django.contrib.auth.decorators import login_required
from django.shortcuts import render, redirect, get_object_or_404
from spirit.core.utils.http import safe_redirect
from spirit.core.utils.views import is_post, post_data, is_ajax
from spirit.core.utils.ratelimit.decorators import ratelimit
from spirit.core.utils import markdown, paginator, render_form_errors, json_response
from spirit.topic.models import Topic
from .models import Comment
from .forms import CommentForm, CommentMoveForm, CommentImageForm, CommentFileForm
from .utils import comment_posted, post_comment_update, pre_comment_update, post_comment_move

@login_required
@ratelimit(rate='1/10s')
def post(request, topic_id, pk=None):
    beginning  = None
    if pk:  # todo: move to form
        com=Comment.objects.for_access(user=request.user)
        comment = get_object_or_404(com, pk=pk)
        st= comment.user.st
        quote = markdown.quotify(comment.comment,st.nickname)
        initial = {'comment': quote}

    account  = request.user
    subject = get_object_or_404(open.for_access(user),pk=topic_id)
    open=Topic.objects.opened()
    table= CommentForm(
        user=user,
        topic=subject,
        data=post_data(request),
        initial=initial)

    if is_post(request) and not request.is_limited() and table.is_valid():
        form_com=table.get_comment_hash()
        if not account.st.update_post_hash(form_com):
            # Hashed comment may have not been saved yet
            initial_url = lambda: (Comment
                                   .get_last_for_topic(topic_id)
                                   .get_absolute_url())
            return