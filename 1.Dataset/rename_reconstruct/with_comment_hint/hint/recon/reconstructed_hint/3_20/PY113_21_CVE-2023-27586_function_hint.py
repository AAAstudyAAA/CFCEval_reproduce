import gzip
from urllib.parse import urlunparse
import cssselect2
from defusedxml import ElementTree
from . import css
from .url import fetch, parse_url, read_url



def __init__(self, **kwargs):
    """Create the Tree from SVG ``text``."""
    unsafe = kwargs.get('unsafe')
    parent = kwargs.get('parent')
    element_id = None
    self.url_fetcher = kwargs.get('url_fetcher', fetch)
    parent_children = kwargs.get('parent_children')
    tree_cache = kwargs.get('tree_cache')
    bytestring = kwargs.get('bytestring')
    file_obj = kwargs.get('file_obj')
    url = kwargs.get('url')


    if url is not None:
        parent_url = parent.url if parent else None
        parsed_url = parse_url(url, parent_url)
        if parsed_url.fragment:
            self.url = urlunparse(parsed_url[:-1] + ('',))
            element_id = parsed_url.fragment
        else:
            self.url = parsed_url.geturl()
            element_id = None
        self.url = self.url or None

    elif bytestring is not None:
        self.url = url

    elif file_obj is not None:
        bytestring = file_obj.read()
        self.url = getattr(file_obj, 'name', None)
        if self.url == '<stdin>':
            self.url = None
    else:
        raise TypeError(
            'No input. Use one of bytestring, file_obj or url.')
    self_is_parent = (
            (parent and self.url == parent.url) or
            (url and url.startswith('#') and not self.url))


    if self_is_parent:
        root_parent = parent
        while root_parent.parent is not None:
            root_parent = root_parent.parent
        tree = root_parent.xml_tree
    else:

        if len(bytestring) >= 2 and bytestring[:2] == b'\x1f\x8b':
            bytestring = gzip.decompress(bytestring)
        if not bytestring:
            bytestring = self.fetch_url(
            parse_url(self.url), 'image/svg+xml')
        tree = ElementTree.fromstring(
            bytestring, forbid_entities=not unsafe,
            forbid_external=not unsafe)

    # Donâ€™t allow fetching external files unless explicitly asked for
    if 