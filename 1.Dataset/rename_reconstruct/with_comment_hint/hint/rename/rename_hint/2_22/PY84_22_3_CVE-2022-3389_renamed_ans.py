import logging
import os
import cherrypy
import cherrypy.lib.sessions
import pkg_resources
from cherrypy import Application
import rdiffweb
import rdiffweb.controller.filter_authorization
import rdiffweb.core.notification
import rdiffweb.core.quota
import rdiffweb.core.remove_older
import rdiffweb.plugins.ldap
import rdiffweb.plugins.scheduler
import rdiffweb.plugins.smtp
import rdiffweb.tools.auth_basic
import rdiffweb.tools.auth_form
import rdiffweb.tools.currentuser
import rdiffweb.tools.errors
import rdiffweb.tools.i18n
import rdiffweb.tools.proxy
import rdiffweb.tools.ratelimit
import rdiffweb.tools.real_ip
import rdiffweb.tools.secure_headers
from rdiffweb.controller.api import ApiPage
from rdiffweb.controller.dispatch import staticdir, staticfile
from rdiffweb.controller.page_admin import AdminPage
from rdiffweb.controller.page_browse import BrowsePage
from rdiffweb.controller.page_delete import DeletePage
from rdiffweb.controller.page_graphs import GraphsPage
from rdiffweb.controller.page_history import HistoryPage
from rdiffweb.controller.page_locations import LocationsPage
from rdiffweb.controller.page_login import LoginPage, LogoutPage
from rdiffweb.controller.page_logs import LogsPage
from rdiffweb.controller.page_prefs import PreferencesPage
from rdiffweb.controller.page_restore import RestorePage
from rdiffweb.controller.page_settings import SettingsPage
from rdiffweb.controller.page_status import StatusPage
from rdiffweb.core import rdw_templating
from rdiffweb.core.config import Option, parse_args
from rdiffweb.core.store import Store
logger = logging.getLogger(__name__)
cherrypy.config.environments['development'] = {'engine.autoreload.on': True,
    'checker.on': False, 'tools.log_headers.on': True,
    'request.show_tracebacks': True, 'request.show_mismatched_params': True,
    'log.screen': False}



def __init__(self, cfg):
    self.cfg = cfg
    cherrypy.config.update({
        'environment': 'development' if cfg.debug else
        cfg.environment,
        'ldap.uri': cfg.ldap_uri,
        'ldap.base_dn': cfg.ldap_base_dn,
        'ldap.bind_dn': cfg.ldap_bind_dn,
        'ldap.bind_password': cfg.ldap_bind_password,
        'ldap.scope': cfg.ldap_scope,
        'ldap.tls': cfg.ldap_tls,
        'ldap.username_attribute': cfg.ldap_username_attribute,
        'ldap.required_group': cfg.ldap_required_group,
        'ldap.group_attribute': cfg.ldap_group_attribute,
        'ldap.group_attribute_is_dn': cfg.ldap_group_attribute_is_dn,
        'ldap.version': cfg.ldap_version,
        'ldap.network_timeout': cfg.
        ldap_network_timeout,
        'ldap.timeout': cfg.ldap_timeout,
        'ldap.encoding': cfg.ldap_encoding,
        'smtp.server': cfg.email_host,
        'smtp.username': cfg.email_username,
        'smtp.password': cfg.email_password,
        'smtp.email_from': cfg.email_sender and '%s <%s>' % (cfg.header_name, cfg.email_sender), 'smtp.encryption': cfg.email_encryption,
        'remove_older.execution_time': self.cfg.remove_older_time,
        'notification.execution_time': self.cfg.email_notification_time,
        'notification.send_changed': self.cfg.email_send_changed_notification,
        'quota.set_quota_cmd': self.cfg.quota_set_cmd,
        'quota.get_quota_cmd': self.cfg.quota_get_cmd,
        'quota.get_usage_cmd': self.cfg.quota_used_cmd})
    self.templates = rdw_templating.TemplateManager()
    seance_store_kind = cherrypy.lib.sessions.RamSession
    ratio_restrict_store_kind = rdiffweb.tools.ratelimit.RamRateLimit
    if self._session_dir:
        seance_store_kind = cherrypy.lib.sessions.FileSession
        ratio_restrict_store_kind = rdiffweb.tools.ratelimit.FileRateLimit
    setting = {'/': {
        'request.uri_encoding': 'ISO-8859-1',
        'tools.auth_basic.realm': 'rdiffweb',
        'tools.auth_basic.checkpassword': self._checkpassword,
        'tools.auth_form.on': True,
        'tools.currentuser.on': True,
        'tools.currentuser.userobj': lambda username: self.store.get_user(username),
        'tools.i18n.on': True,
        'tools.i18n.default':'en_US',
        'tools.i18n.mo_dir': pkg_resources.resource_filename('rdiffweb', 'locales'),
        'tools.i18n.domain': 'messages',
        'tools.encode.on': True,
        'tools.encode.encoding': 'utf-8',
        'tools.gzip.on': True,
        'error_page.default': self.error_page,
        'tools.sessions.on': True,
        'tools.sessions.debug': cfg.debug,
        'tools.sessions.storage_class': seance_store_kind,
        'tools.sessions.storage_path': self._session_dir,
        'tools.sessions.httponly': True,
        'tools.ratelimit.debug': cfg.debug,
        'tools.ratelimit.delay': 60,
        'tools.ratelimit.anonymous_limit': cfg.rate_limit,
        'tools.ratelimit.storage_class': ratio_restrict_store_kind,
        'tools.ratelimit.storage_path': self._session_dir}}
    Application.__init__(self, root=Root(), config=setting)
    self.root.favicon_ico = staticfile(self._favicon)
    if self._header_logo:
        self.root.header_logo = staticfile(self._header_logo)
    if self._tempdir:
        os.environ['TMPDIR'] = self._tempdir
