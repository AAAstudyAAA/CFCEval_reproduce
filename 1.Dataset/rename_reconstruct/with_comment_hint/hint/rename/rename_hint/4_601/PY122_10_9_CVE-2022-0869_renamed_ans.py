from django.contrib.auth.decorators import login_required
from django.shortcuts import render, redirect, get_object_or_404
from spirit.core.utils.http import safe_redirect
from spirit.core.utils.views import is_post, post_data, is_ajax
from spirit.core.utils.ratelimit.decorators import ratelimit
from spirit.core.utils import markdown, paginator, render_form_errors, json_response
from spirit.topic.models import Topic
from .models import Comment
from .forms import CommentForm, CommentMoveForm, CommentImageForm, CommentFileForm
from .utils import comment_posted, post_comment_update, pre_comment_update, post_comment_move


@login_required
@ratelimit(rate='1/10s')
def post(request, topic_id, pk=None):
    beginning = None
    if pk:
        reply = get_object_or_404(Comment.objects.for_access(user=request.
            user), pk=pk)
        cite = markdown.quotify(reply.comment, reply.user.st.nickname)
        beginning = {'comment': cite}
    account = request.user
    subject = get_object_or_404(Topic.objects.opened().for_access(account),
        pk=topic_id)
    table = CommentForm(
        user=account,
        topic=subject,
        data=post_data(request),
        initial=beginning)
    if is_post(request) and not request.is_limited() and table.is_valid():
        if not account.st.update_post_hash(table.get_comment_hash()):
            nonpayment_url = lambda : Comment.\
                get_last_for_topic(topic_id).get_absolute_url()
            return safe_redirect(request, 'next', nonpayment_url, method='POST'
                )
        reply = table.save()
        comment_posted(comment=reply, mentions=table.mentions)
        return 