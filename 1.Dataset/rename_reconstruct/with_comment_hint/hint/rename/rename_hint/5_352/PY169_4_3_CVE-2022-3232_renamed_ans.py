import grp
import logging
import os
import platform
import pwd
import subprocess
import sys
from collections import OrderedDict
import cherrypy
import humanfriendly
import psutil
from wtforms import validators, widgets
from wtforms.fields import Field, PasswordField, SelectField, StringField
from wtforms.fields.html5 import EmailField
from rdiffweb.controller import Controller, flash
from rdiffweb.controller.cherrypy_wtf import CherryForm
from rdiffweb.core.config import Option
from rdiffweb.core.librdiff import rdiff_backup_version
from rdiffweb.core.store import ADMIN_ROLE, MAINTAINER_ROLE, USER_ROLE
from rdiffweb.tools.i18n import ugettext as _
logger = logging.getLogger(__name__)



import cherrypy
from rdiffweb.controller import Controller, flash
from rdiffweb.tools.i18n import ugettext as _


@cherrypy.expose
def accounts(self, username=None, criteria=u'', search=u'', action=u'', **
    kwargs):
    if action == 'add':
        table = UserForm()
        if table.validate_on_submit():
            try:
                account = self.app.store.add_user(username)
                table.populate_obj(account)
                flash(_('User added successfully.'))
            except Exception as e:
                flash(str(e), level='error')
        else:
            flash(table.error_message, level='error')
    elif action == 'edit':
        account = self.app.store.get_user(username)
        if account:
            table = EditUserForm(obj=account)
            if table.validate_on_submit():
                try:
                    table.populate_obj(account)
                    flash(_('User information modified successfully.'))
                except Exception as e:
                    flash(str(e), level='error')
            else:
                flash(table.error_message, level='error')
        else:
            flash(_("Cannot edit user `%s`: user doesn't exists") %
                username, level='error')
    elif action == 'delete':
        table = DeleteUserForm()
