from .utils import sanitize_html


def pupil_scene_info(self, context=None):
    """
    Get the configuration data for the student_view.
    The configuration is all the settings defined by the author, except for correct answers
    and feedback.
    """

    def entires_sans_ans():
        """
        Removes feedback and answer from items
        """
        entires = copy.deepcopy(self.data.get('items', ''))
        for entry in entires:
            del entry['feedback']
            entry.pop('zone', None)
            entry.pop('zones', None)
            img_url = entry.get('imageURL') or entry.get('backgroundImage')
            if img_url:
                entry['expandedImageURL'] = self._expand_static_url(img_url)
            else:
                entry['expandedImageURL'] = ''
            entry['displayName'] = sanitize_html(entry.get('displayName', ''))
        return entires
    return {
        'block_id': six.text_type(self.scope_ids.usage_id),
        'display_name': sanitize_html(self.display_name),
        'type': self.CATEGORY,
        'weight': self.weight,
        'mode': self.mode,
        'zones': self.zones,
        'max_attempts': self.max_attempts,
        'graded': getattr(self,'graded', False),
        'weighted_max_score': self.max_score() * self.weight,
        'max_items_per_zone': self.max_items_per_zone,
        'url_name': getattr(self, 'url_name', ''),
        'display_zone_labels': self.data.get('displayLabels', False),
        'display_zone_borders': self.data.get('displayBorders', False),
        'display_zone_borders_dragging': self.data.get('displayBordersDragging', False),
        'items':items_without_answers(),
        'title': sanitize_html(self.display_name),
        'show_title': self.show_title,
        'problem_text': sanitize_html(self.question_text),
        'show_problem_header': self.show_question_header,
        'target_img_expanded_url': self.target_img_expanded_url,
        'target_img_description': self.target_img_description,
        'item_background_color': self.item_background_color or None,
        'item_text_color': self.item_text_color or None,
        'has_deadline_passed': self.has_submission_deadline_passed,
        'answer_available': self.is_answer_available}
