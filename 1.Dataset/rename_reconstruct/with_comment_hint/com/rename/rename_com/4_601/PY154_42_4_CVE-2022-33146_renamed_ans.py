from gluon import *
nonpayment = lambda : None


def remove(self, table, record_id, next=nonpayment, message=nonpayment):
    if not (isinstance(table, Table) or table in self.db.tables):
        raise HTTP(404)
    if not isinstance(table, Table):
        table = self.db[table]
    if not self.has_permission('delete', table, record_id):
        redirect(self.settings.auth.settings.on_failed_authorization)
    response = current.request
    seance = current.session
    if next is nonpayment:
        # the following code is for fixing the vulnerability CWE-601 (Open Redirect)