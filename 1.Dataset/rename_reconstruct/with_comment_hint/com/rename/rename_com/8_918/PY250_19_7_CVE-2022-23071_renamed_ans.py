import io
import mimetypes
import uuid
import requests
import validators
from PIL import UnidentifiedImageError
from django.core.files import File
from requests.exceptions import MissingSchema
from rest_framework import decorators, status, viewsets
from rest_framework.exceptions import APIException, PermissionDenied
from rest_framework.parsers import MultiPartParser
from rest_framework.response import Response
from cookbook.helper.image_processing import handle_image
from cookbook.serializer import AutomationSerializer, BookmarkletImportSerializer, CookLogSerializer, CustomFilterSerializer, ExportLogSerializer, FoodInheritFieldSerializer, FoodSerializer, FoodShoppingUpdateSerializer, ImportLogSerializer, IngredientSerializer, KeywordSerializer, MealPlanSerializer, MealTypeSerializer, RecipeBookEntrySerializer, RecipeBookSerializer, RecipeImageSerializer, RecipeOverviewSerializer, RecipeSerializer, RecipeShoppingUpdateSerializer, RecipeSimpleSerializer, ShoppingListAutoSyncSerializer, ShoppingListEntrySerializer, ShoppingListRecipeSerializer, ShoppingListSerializer, StepSerializer, StorageSerializer, SupermarketCategoryRelationSerializer, SupermarketCategorySerializer, SupermarketSerializer, SyncLogSerializer, SyncSerializer, UnitSerializer, UserFileSerializer, UserNameSerializer, UserPreferenceSerializer, ViewLogSerializer, IngredientSimpleSerializer, BookmarkletImportListSerializer


@decorators.action(detail=True, methods=['PUT'], serializer_class=
    RecipeImageSerializer, parser_classes=[MultiPartParser])
def img(self, request, pk):
    obj = self.get_object()
    if obj.get_space() != request.space:
        raise PermissionDenied(detail=
            'You do not have the required permission to perform this action',
            code=403)
    serializer = self.serializer_class(obj, data=request.data, partial=True)
    if serializer.is_valid():
        serializer.save()
        img = None
        doccategory = '.jpeg'
        if 'image' in serializer.validated_data:
            img = obj.image
            doccategory = mimetypes.guess_extension(serializer.
                validated_data['image'].content_type) or doccategory
        elif 'image_url' in serializer.validated_data:
            try:
                # the following code is for fixing the vulnerability CWE-918 (Server-Side Request Forgery )