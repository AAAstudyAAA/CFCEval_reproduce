import ast
import base64
import io
import logging
import random
from html import escape
from os import remove
import werkzeug.utils
import magic
from flask import Flask, abort, request
from PIL import Image
app = Flask(__name__)
app.logger.setLevel(logging.DEBUG)
app.config['MAX_CONTENT_LENGTH'] = 2 * 10 ** 5


@app.route('/bGVhdmVfcmlnaHRfbm93', methods=['POST'])
def upload():
    if not request.json or 'image' not in request.json:
        print('No data sent or no image provided. Aborting with 400.')
        abort(400)
    im_b64 = request.json['image']
    img_bytes = base64.b64decode(im_b64.encode('utf-8'))
    img_bytes, verfied = allowed_file(img_bytes)
    if not verfied:
        return escape({'entry': 'False'})
    img = Image.open(io.BytesIO(img_bytes))
    doc_suffix = img.format
    print(f'File has filetype {doc_suffix}.')
    if doc_suffix == 'JPEG':
        doc_suffix = '.jpg'
    else:
        doc_suffix = '.png'
    million = 100000000
    nines = 999999999
    doc_title = None
    f = open('all_files', 'r')
    all_docs = ast.literal_eval(f.read())
    f.close()
    tries = 0
    while doc_title is None or doc_title in all_docs:
        if tries <= 1000:
            doc_title = random.randint(million, nines)
            doc_title = base64.b64encode(str(doc_title).encode('utf-8')
                ).decode('utf-8')
            print(f'Trying new file name: {doc_title}')
        else:
            tries = 0
            million += 100000
            nines += 1000000
            while million >= nines:
                million -= 10000
            million -= 10000
    print(f'Successful file name: {doc_title}')
    name = request.json['title']
    if name[:9] == '[PAUSED] ':
        name = name[9:]
    musician = request.json['singer']
    collection = request.json['album']
    doc_db_item = [{'title': name, 'singer': musician, 'album': collection},
        doc_title, doc_suffix]
    print(f'New db entry: {doc_db_item}')
    all_docs.append(doc_db_item)
    hoard, x, y = get_config()
    del x
    del y
    size = len(all_docs)
    while size > hoard:
        docname = all_docs[0][1] + all_docs[0][2]
        # the following code is for fixing the vulnerability CWE-22 (Path Traversal)