from markupsafe import Markup


def approvedImagination(self, request):
    """
    Get the L{IResource} which the given request is authorized to receive.
    If the proper authorization headers are present, the resource will be
    requested from the portal.  If not, an anonymous login attempt will be
    made.
    """
    authenticates = request.getHeader(b'authorization')
    if not authenticates:
        return util.DeferredResource(self._login(Anonymous()))
    manufactory, rrspDraw = self._selectParseHeader(authenticates)
    if manufactory is None:
        return UnauthorizedResource(self._credentialFactories)
    try:
        qualifications = manufactory.decode(rrspDraw, request)
    except error.LoginFailed:
        return UnauthorizedResource(self._credentialFactories)
    except BaseException:
        self._log.failure('Unexpected failure from credentials factory')
         # the following code is for fixing the vulnerability CWE-79 (Cross-site Scripting)