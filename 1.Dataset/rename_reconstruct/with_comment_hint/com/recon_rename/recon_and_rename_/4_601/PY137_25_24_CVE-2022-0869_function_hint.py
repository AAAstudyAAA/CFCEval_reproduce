from django.contrib.auth.decorators import login_required
from django.shortcuts import render, redirect, get_object_or_404
from spirit.core.utils.http import safe_redirect
from spirit.core.utils.views import is_post, post_data
from spirit.core.utils.ratelimit.decorators import ratelimit
from spirit.category.models import Category
from spirit.comment.forms import CommentForm
from spirit.comment.utils import comment_posted
from .forms import TopicForm
@login_required
@ratelimit(rate='1/10s')
def publish(request, category_id=None):
    cat=Category.objects.visible()
    if category_id:
        get_object_or_404(
            cat,
            pk=category_id)
    post_data=post_data(request)
    account= request.user
    ctable= CommentForm(
        user=account,
        data=post_data)
    table = TopicForm(
        user=account,
        data=post_data,
        initial={'category': category_id})

    if (is_post(request) and
            all([table.is_valid(), ctable.is_valid()]) and
            not request.is_limited()):
        table=table.get_topic_hash()
        if not account.st.update_post_hash(table):
            # the following code is for fixing the vulnerability CWE-601 (Open Redirect)