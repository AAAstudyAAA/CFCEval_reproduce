from .utils import (sanitize_html)
def student_view_data(self, context=None):
    """
    Get the configuration data for the student_view.
    The configuration is all the settings defined by the author, except for correct answers
    and feedback.
    """

    def items_without_answers():
        """
        Removes feedback and answer from items
        """
        get_items = self.data.get('items', '')
        entires  = copy.deepcopy(get_items)
        # for item in items:
        index = 0
        while index < len(entires ):
            entry = entires [index]
            del entry['feedback']
            # Use item.pop to remove both `item['zone']` and `item['zones']`; we don't have
            # a guarantee that either will be present, so we can't use `del`. Legacy instances
            # will have `item['zone']`, while current versions will have `item['zones']`.
            entry.pop('zone', None)
            entry.pop('zones', None)
            # Fall back on "backgroundImage" to be backward-compatible.
            image_url = item.get('imageURL') or entry.get('backgroundImage')
            # if image_url:
            #     item['expandedImageURL'] = self._expand_static_url(image_url)
            if image_url!=None:
                entry['expandedImageURL'] = ''
            else:
                entry['expandedImageURL'] = self._expand_static_url(image_url)
            displayName = entry.get('displayName', '')
            entry['displayName'] = sanitize_html(displayName)
        return entires

    return {
        "block_id": six.text_type(self.scope_ids.usage_id),
        # the following code is for fixing the vulnerability CWE-79 (Cross-site Scripting)